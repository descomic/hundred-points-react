{"version":3,"sources":["components/PlayerList.js","components/AddingPlayers.js","components/Player.js","helpers/sortPlayers.js","components/Game.js","components/Header.js","components/App.js","index.js"],"names":["PlayerList","listOfPlayers","players","map","player","ListGroup","Item","variant","AddingPlayers","props","state","newPlayerName","errorMessage","parentHandleAddPlayer","verifyName","bind","handleNameChange","handleAddPlayer","name","this","setState","includes","event","target","value","preventDefault","newPlayersList","slice","newPlayer","alert","push","tooltip","Tooltip","id","show","Container","Row","className","Col","xs","lg","Form","onSubmit","Label","Control","onChange","placeholder","OverlayTrigger","placement","overlay","Button","type","disabled","to","size","React","Component","Player","index","score","newScore","handleNewPlayerScore","Card","Accordion","Toggle","as","Header","eventKey","parseInt","Collapse","Body","Group","htmlFor","column","pattern","sortPlayers","a","b","Game","round","playerName","color","Math","floor","random","handleNextRound","renderPlayer","sort","onClick","noGutters","Navbar","bg","expand","exact","Brand","App","addPlayer","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db02b2fd.chunk.js","sourcesContent":["import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\n\nfunction PlayerList({ players }) {\n  let listOfPlayers = players.map((player) => {\n    return (\n      <ListGroup.Item key={player}>{player}</ListGroup.Item>\n    );\n  });\n\n  return (\n    <ListGroup variant=\"flush\">{listOfPlayers}</ListGroup>\n  )\n}\n\nexport default PlayerList","import React from 'react'\nimport { Button, Col, Container, Form, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PlayerList from './PlayerList'\n\nclass AddingPlayers extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: props.players,\n      newPlayerName: '',\n      errorMessage: 'Empty name',\n    }\n    this.parentHandleAddPlayer = props.parentHandleAddPlayer\n    this.verifyName = this.verifyName.bind(this)\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handleAddPlayer = this.handleAddPlayer.bind(this)\n  }\n\n  /**\n   * Returns true if the name is valid and false else.\n   * \n   * @param {string} name \n   */\n  verifyName(name) {\n    if (name === '') {\n      this.setState({ errorMessage: \"Empty name\" })\n      return false\n    }\n\n    if (this.state.players.includes(name)) {\n      this.setState({ errorMessage: \"Duplicate name\" })\n      return false\n    }\n\n    this.setState({ errorMessage: \"\" })\n    return true\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newPlayerName: event.target.value,\n    })\n    this.verifyName(event.target.value)\n  }\n\n  handleAddPlayer(event) {\n    event.preventDefault()\n\n    let newPlayersList = this.state.players.slice()\n    let newPlayer = this.state.newPlayerName.slice()\n\n    if (!this.verifyName(newPlayer)) {\n      alert(this.state.errorMessage)\n\n    } else {\n\n      if (this.state.players.includes(newPlayer)) {\n        alert(`The player ${newPlayer} already exists.`)\n\n      } else {\n        newPlayersList.push(newPlayer)\n\n        this.parentHandleAddPlayer(newPlayer)\n\n        this.setState({\n          players: newPlayersList,\n          newPlayerName: '',\n        })\n      }\n    }\n  }\n\n  render() {\n    const tooltip = (\n      <Tooltip id=\"tooltip-add-button\" show={this.state.errorMessage !== \"\"}>{this.state.errorMessage}</Tooltip>\n    )\n\n    return (\n      <Container>\n        <Row className=\"mt-4\">\n          <Col>\n            <h2>Preparing the game</h2>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-4\" xs={1} lg={2}>\n          <Col>\n            <PlayerList players={this.state.players} />\n          </Col>\n\n          <Col>\n            <Form className='mt-3 AddForm' onSubmit={this.handleAddPlayer}>\n              <Row>\n                <Col>\n                  <Form.Label>Add Player: </Form.Label>\n                </Col>\n              </Row>\n\n              <Row className='m-4'>\n                <Col>\n                  <Form.Control\n                    value={this.state.newPlayerName}\n                    onChange={this.handleNameChange}\n                    placeholder={\"Player's name\"}\n                  />\n\n                </Col>\n                <Col>\n                  <OverlayTrigger\n                    placement=\"top\"\n                    overlay={tooltip}\n                  >\n                    <Button\n                      type='submit'\n                      variant='secondary'\n                      disabled={this.state.errorMessage !== \"\"}\n                    >\n                      Add\n                  </Button>\n                  </OverlayTrigger>\n                </Col>\n              </Row>\n            </Form>\n\n            <Row>\n              <Col>\n                <LinkContainer to=\"/hundred-points-react/game\">\n                  <Button variant='primary' size='lg'>Play</Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n      </Container>\n    )\n  }\n}\n\nexport default AddingPlayers","import React from 'react';\nimport { Accordion, Card, Col, Container, Form, Row } from 'react-bootstrap';\n\nfunction Player({ index, name, score, newScore, handleNewPlayerScore }) {\n  return (\n    <Card>\n      <Accordion.Toggle as={Card.Header} eventKey={name}>\n        <Container>\n          <Row>\n            <Col>{name}</Col>\n            <Col>{score}</Col>\n            <Col>{parseInt(score) + parseInt(newScore)}</Col>\n          </Row>\n        </Container>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={name}>\n        <Card.Body>\n          <Form onSubmit={(event) => event.preventDefault()}>\n            <Form.Group as={Row}>\n              <Col>\n                <Form.Label htmlFor={name} column>New Score</Form.Label>\n              </Col>\n              <Col>\n                <Form.Control\n                  id={name}\n                  value={newScore}\n                  onChange={(event) => handleNewPlayerScore(event, index)}\n                  type=\"text\"\n                  pattern=\"[0-9]*\"\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n}\n\nexport default Player;","/**\n * Sorting players in score order descending.\n * \n * @param {player} a \n * @param {player} b \n */\nexport default function sortPlayers(a, b) {\n  if (a.score > b.score) {\n    return 1\n  }\n\n  if (a.score < b.score) {\n    return -1\n  }\n\n  return 0\n}","import React from 'react'\nimport { Accordion, Button, Col, Container, Row } from 'react-bootstrap'\nimport Player from './Player'\n\nimport '../css/Game.css'\nimport sortPlayers from '../helpers/sortPlayers'\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      round: 1,\n      players: props.players.map((playerName) => {\n        return {\n          name: playerName,\n          color: `rgb(${Math.floor(255 * Math.random())}, ${Math.floor(255 * Math.random())}, ${Math.floor(255 * Math.random())})`,\n          score: 0,\n          newScore: 0,\n        }\n      })\n    }\n    this.handleNewPlayerScore = this.handleNewPlayerScore.bind(this)\n    this.handleNextRound = this.handleNextRound.bind(this)\n    this.renderPlayer = this.renderPlayer.bind(this)\n  }\n\n  handleNewPlayerScore(event, index) {\n    event.preventDefault()\n\n    let players = this.state.players.slice()\n    players[index].newScore = parseInt(event.target.value === \"\" ? 0 : event.target.value)\n\n    this.setState({ players: players })\n  }\n\n  handleNextRound(event) {\n    event.preventDefault()\n\n    this.setState({\n      round: this.state.round + 1,\n      players: this.state.players.map((player) => {\n        return {\n          name: player.name,\n          score: player.score + player.newScore,\n          newScore: 0,\n        }\n      }).sort(sortPlayers)\n    })\n  }\n\n  renderPlayer(player, index) {\n    return (\n      <Player\n        key={player.score + player.name}\n        index={index}\n        name={player.name}\n        score={player.score}\n        newScore={player.newScore}\n        handleNewPlayerScore={this.handleNewPlayerScore}\n      />\n    )\n  }\n\n  render() {\n    let players = this.state.players.map(this.renderPlayer)\n\n    return (\n      <Container className=\"game-container\">\n        <Row className=\"game-header mt-3\">\n          <Col>\n            <h2>Round {this.state.round}</h2>\n          </Col>\n          <Col>\n            <Button\n              as=\"input\"\n              type=\"button\"\n              className=\"next-round-button\"\n              value=\"Next round\"\n              onClick={this.handleNextRound}\n            />\n          </Col>\n        </Row>\n        <Row noGutters className=\"mt-4\">\n          <Col>\n            <Row className=\"m-auto\">\n              <Col className=\"m-auto\"><h3>Name</h3></Col>\n              <Col className=\"m-auto\"><h3>Score</h3></Col>\n              <Col className=\"m-auto\"><h3>Next score</h3></Col>\n            </Row>\n            <Row>\n              <Col>\n                <Accordion>\n                  {players}\n                </Accordion>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Game","import React from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <LinkContainer exact to=\"/hundred-points-react/\">\n        <Navbar.Brand>100 points</Navbar.Brand>\n      </LinkContainer>\n    </Navbar>\n  )\n}\n\nexport default Header","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport AddingPlayers from './AddingPlayers'\nimport Game from './Game'\nimport Header from './Header'\n\n// Importing style\nimport '../css/App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: []\n    }\n\n    this.addPlayer = this.addPlayer.bind(this)\n  }\n\n  addPlayer(playerName) {\n    let newPlayersList = this.state.players.slice()\n\n    newPlayersList.push(playerName)\n\n    this.setState({\n      players: newPlayersList\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/hundred-points-react\"></Redirect>\n            </Route>\n            <Route exact path=\"/hundred-points-react\">\n              <AddingPlayers players={this.state.players} parentHandleAddPlayer={this.addPlayer} />\n            </Route>\n            <Route path=\"/hundred-points-react/game\">\n              <Game players={this.state.players.slice()} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n// Adding bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}