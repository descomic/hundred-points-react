{"version":3,"sources":["components/PlayerList.js","components/AddingPlayers.js","components/Player.js","components/Game.js","components/Header.js","components/App.js","index.js"],"names":["PlayerList","listOfPlayers","players","map","player","ListGroup","Item","variant","AddingPlayers","props","state","newPlayerName","parentHandleAddPlayer","handleNameChange","bind","handleAddPlayer","event","this","setState","target","value","newPlayersList","slice","newPlayer","alert","includes","push","preventDefault","Form","className","onSubmit","Label","Control","onChange","Button","type","exact","to","React","Component","Player","index","name","score","newScore","handleNewPlayerScore","Card","Accordion","Toggle","as","Header","eventKey","Container","Row","Col","parseInt","Collapse","Body","Group","htmlFor","column","id","pattern","Game","round","playerName","handleNextRound","renderPlayer","console","log","newState","sort","a","b","onClick","noGutters","sm","Navbar","bg","expand","Brand","App","addPlayer","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ace3b84.chunk.js","sourcesContent":["import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\n\nfunction PlayerList({ players }) {\n  let listOfPlayers = players.map((player) => {\n    return (\n      <ListGroup.Item key={player}>{player}</ListGroup.Item>\n    );\n  });\n\n  return (\n    <ListGroup variant=\"flush\">{listOfPlayers}</ListGroup>\n  )\n}\n\nexport default PlayerList","import React from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PlayerList from './PlayerList'\n\nclass AddingPlayers extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: props.players,\n      newPlayerName: '',\n    }\n    this.parentHandleAddPlayer = props.parentHandleAddPlayer\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handleAddPlayer = this.handleAddPlayer.bind(this)\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      players: this.state.players,\n      newPlayerName: event.target.value,\n    })\n  }\n\n  handleAddPlayer(event) {\n    let newPlayersList = this.state.players.slice()\n    let newPlayer = this.state.newPlayerName.slice()\n\n    if (newPlayer === '') {\n      alert(\"Please enter a name\")\n\n    } else {\n\n      if (this.state.players.includes(newPlayer)) {\n        alert(`The player ${newPlayer} already exists.`)\n\n      } else {\n        newPlayersList.push(newPlayer)\n\n        this.parentHandleAddPlayer(newPlayer)\n\n        this.setState({\n          players: newPlayersList,\n          newPlayerName: '',\n        })\n      }\n    }\n\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <div>\n        <PlayerList players={this.state.players} />\n        <Form className='Add' onSubmit={this.handleAddPlayer}>\n          <Form.Label>Add Player: </Form.Label>\n          <Form.Control value={this.state.newPlayerName} onChange={this.handleNameChange}></Form.Control>\n          <Button type='submit'>Add</Button>\n        </Form>\n\n        <LinkContainer exact to=\"/hundred-points-react/game\">\n          <Button>Play</Button>\n        </LinkContainer>\n      </div>\n    )\n  }\n}\n\nexport default AddingPlayers","import React from 'react';\nimport { Accordion, Card, Col, Container, Form, Row } from 'react-bootstrap';\n\nfunction Player({ index, name, score, newScore, handleNewPlayerScore }) {\n  return (\n    <Card>\n      <Accordion.Toggle as={Card.Header} eventKey={name}>\n        <Container>\n          <Row>\n            <Col>{name}</Col>\n            <Col>{score}</Col>\n            <Col>{parseInt(score) + parseInt(newScore)}</Col>\n          </Row>\n        </Container>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={name}>\n        <Card.Body>\n          <Form>\n            <Form.Group as={Row}>\n              <Col>\n                <Form.Label htmlFor={name} column>New Score</Form.Label>\n              </Col>\n              <Col>\n                <Form.Control\n                  id={name}\n                  value={newScore}\n                  onChange={(event) => handleNewPlayerScore(event, index)}\n                  type=\"text\"\n                  pattern=\"[0-9]*\"\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n}\n\nexport default Player;","import React from 'react'\nimport { Accordion, Button, Col, Container, Row } from 'react-bootstrap'\nimport Player from './Player'\n\nimport '../css/Game.css'\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      round: 1,\n      players: props.players.map((playerName) => {\n        return {\n          name: playerName,\n          score: 0,\n          newScore: 0,\n        }\n      })\n    }\n    this.handleNewPlayerScore = this.handleNewPlayerScore.bind(this)\n    this.handleNextRound = this.handleNextRound.bind(this)\n    this.renderPlayer = this.renderPlayer.bind(this)\n  }\n\n  handleNewPlayerScore(event, index) {\n    console.log(event)\n\n    let newState = this.state\n    newState.players[index].newScore = parseInt(event.target.value)\n\n    this.setState(newState)\n\n    event.preventDefault()\n  }\n\n  handleNextRound(event) {\n    event.preventDefault()\n\n    this.setState({\n      round: this.state.round + 1,\n      players: this.state.players.map((player) => {\n        return {\n          name: player.name,\n          score: player.score + player.newScore,\n          newScore: 0,\n        }\n      })\n    })\n  }\n\n  renderPlayer(player, index) {\n    return (\n      <Player\n        key={index}\n        index={index}\n        name={player.name}\n        score={player.score}\n        newScore={player.newScore}\n        handleNewPlayerScore={this.handleNewPlayerScore}\n      />\n    )\n  }\n\n  render() {\n    let players = this.state.players.map(this.renderPlayer)\n    players.sort((a, b) => b.score - a.score)\n\n    return (\n      <Container className=\"game-container\">\n        <Row className=\"game-header\">\n          <Col>\n            <h2>Round {this.state.round}</h2>\n          </Col>\n          <Col>\n            <Button\n              as=\"input\"\n              type=\"button\"\n              className=\"next-round-button\"\n              value=\"Next round\"\n              onClick={this.handleNextRound}\n            />\n          </Col>\n        </Row>\n        <Row noGutters>\n          <Col sm=\"2\">\n            <Accordion>\n              {players}\n            </Accordion>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Game","import React from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <LinkContainer exact to=\"/hundred-points-react/\">\n        <Navbar.Brand>100 points</Navbar.Brand>\n      </LinkContainer>\n    </Navbar>\n  )\n}\n\nexport default Header","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport AddingPlayers from './AddingPlayers'\nimport Game from './Game'\nimport Header from './Header'\n\n// Importing style\nimport '../css/App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: []\n    }\n\n    this.addPlayer = this.addPlayer.bind(this)\n  }\n\n  addPlayer(playerName) {\n    let newPlayersList = this.state.players.slice()\n    \n    newPlayersList.push(playerName)\n\n    this.setState({\n      players: newPlayersList\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Header />\n          <Switch>\n            <Redirect to=\"/hundred-points-react/\"></Redirect>\n            <Route path=\"/hundred-points-react/\">\n              <AddingPlayers players={this.state.players} parentHandleAddPlayer={this.addPlayer} />\n            </Route>\n            <Route path=\"/game\">\n              <Game players={this.state.players.slice()} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n// Adding bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}