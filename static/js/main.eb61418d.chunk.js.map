{"version":3,"sources":["components/PlayerList.js","components/AddingPlayers.js","components/Player.js","helpers/sortPlayers.js","components/Game.js","components/Header.js","components/App.js","index.js"],"names":["PlayerList","players","handleDeletePlayer","listOfPlayers","map","player","ListGroup","Item","Row","Col","sm","xs","className","Button","size","variant","onClick","event","AddingPlayers","props","state","newPlayerName","errorMessage","alertMessage","parentHandleAddPlayer","parentHandleDeletePlayer","verifyName","bind","handleNameChange","handleAddPlayer","name","this","setState","includes","target","value","preventDefault","newPlayersList","slice","newPlayer","alert","push","tooltip","Tooltip","id","show","Alert","dismissible","onClose","Container","lg","Form","onSubmit","Label","Control","onChange","placeholder","OverlayTrigger","placement","overlay","type","disabled","to","React","Component","Player","index","score","newScore","handleNewPlayerScore","Card","Accordion","Toggle","as","Header","eventKey","parseInt","Collapse","Body","Group","htmlFor","column","pattern","sortPlayers","a","b","Game","playerName","color","Math","floor","random","round","history","Object","assign","chartData","data","labels","datasets","handleNextRound","renderPlayer","updateHistory","updateChartData","sort","forEach","find","x","Array","fill","i","label","backgroundColor","borderColor","borderWidth","noGutters","options","title","display","text","fontSize","legend","position","Navbar","bg","expand","exact","Brand","App","addPlayer","callback","filter","console","log","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb61418d.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Col, ListGroup, Row } from 'react-bootstrap'\n\nimport '../css/PlayerList.css'\n\nfunction PlayerList({ players, handleDeletePlayer }) {\n  let listOfPlayers = players.map((player) => {\n    return (\n      <ListGroup.Item key={player}>\n        <Row>\n          <Col sm={10} xs={10}>\n            <span className=\"player-name\">{player}</span>\n          </Col>\n          <Col sm={1} xs={1}>\n            <Button size=\"sm\" variant=\"light\" onClick={(event) => handleDeletePlayer(event, player)}>X</Button>\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <ListGroup variant=\"flush\">{listOfPlayers}</ListGroup>\n  )\n}\n\nexport default PlayerList","import React from 'react'\nimport { Alert, Button, Col, Container, Form, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PlayerList from './PlayerList'\n\nclass AddingPlayers extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: props.players,\n      newPlayerName: '',\n      errorMessage: 'Empty name',\n      alertMessage: '',\n    }\n    this.parentHandleAddPlayer = props.parentHandleAddPlayer\n    this.parentHandleDeletePlayer = props.handleDeletePlayer\n    this.verifyName = this.verifyName.bind(this)\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handleAddPlayer = this.handleAddPlayer.bind(this)\n    this.handleDeletePlayer = this.handleDeletePlayer.bind(this)\n  }\n\n  /**\n   * Returns true if the name is valid and false else.\n   * \n   * @param {string} name \n   */\n  verifyName(name) {\n    if (name === '') {\n      this.setState({ errorMessage: \"Empty name\" })\n      return false\n    }\n\n    if (this.state.players.includes(name)) {\n      this.setState({ errorMessage: \"Duplicate name\" })\n      return false\n    }\n\n    this.setState({ errorMessage: \"\" })\n    return true\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newPlayerName: event.target.value,\n    })\n    this.verifyName(event.target.value)\n  }\n\n  handleAddPlayer(event) {\n    event.preventDefault()\n\n    let newPlayersList = this.state.players.slice()\n    let newPlayer = this.state.newPlayerName.slice()\n\n    if (!this.verifyName(newPlayer)) {\n      alert(this.state.errorMessage)\n\n    } else {\n\n      if (this.state.players.includes(newPlayer)) {\n        alert(`The player ${newPlayer} already exists.`)\n\n      } else {\n        newPlayersList.push(newPlayer)\n\n        this.parentHandleAddPlayer(newPlayer)\n\n        this.setState({\n          players: newPlayersList,\n          newPlayerName: '',\n        })\n      }\n    }\n  }\n\n  handleDeletePlayer(event, player) {\n    event.preventDefault()\n    this.parentHandleDeletePlayer(event, player, () => this.setState({ players: this.props.players, alertMessage: `${player} deleted` }))\n  }\n\n  render() {\n    const tooltip = (\n      <Tooltip id=\"tooltip-add-button\" show={this.state.errorMessage !== \"\"}>{this.state.errorMessage}</Tooltip>\n    )\n\n    return (\n      <div>\n        <div>\n          {\n            this.state.alertMessage === '' ?\n              null\n              : <Alert variant=\"success\" dismissible onClose={() => this.setState({ alertMessage: \"\" })}>{this.state.alertMessage}</Alert>\n          }\n        </div>\n\n        <Container>\n          <Row className=\"mt-4\">\n            <Col>\n              <h2>Preparing the game</h2>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-4\" xs={1} lg={2}>\n            <Col>\n              <PlayerList players={this.state.players} handleDeletePlayer={this.handleDeletePlayer} />\n            </Col>\n\n            <Col>\n              <Form className='mt-3 AddForm' onSubmit={this.handleAddPlayer}>\n                <Row>\n                  <Col>\n                    <Form.Label>Add Player: </Form.Label>\n                  </Col>\n                </Row>\n\n                <Row className='m-4'>\n                  <Col>\n                    <Form.Control\n                      value={this.state.newPlayerName}\n                      onChange={this.handleNameChange}\n                      placeholder={\"Player's name\"}\n                    />\n\n                  </Col>\n                  <Col>\n                    <OverlayTrigger\n                      placement=\"top\"\n                      overlay={tooltip}\n                    >\n                      <Button\n                        type='submit'\n                        variant='secondary'\n                        disabled={this.state.errorMessage !== \"\"}\n                      >\n                        Add\n                  </Button>\n                    </OverlayTrigger>\n                  </Col>\n                </Row>\n              </Form>\n\n              <Row>\n                <Col>\n                  <LinkContainer to=\"/hundred-points-react/game\">\n                    <Button variant='primary' size='lg'>Play</Button>\n                  </LinkContainer>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default AddingPlayers","import React from 'react';\nimport { Accordion, Card, Col, Container, Form, Row } from 'react-bootstrap';\n\nfunction Player({ index, name, score, newScore, handleNewPlayerScore }) {\n  return (\n    <Card>\n      <Accordion.Toggle as={Card.Header} eventKey={name}>\n        <Container>\n          <Row>\n            <Col>{name}</Col>\n            <Col>{score}</Col>\n            <Col>{parseInt(score) + parseInt(newScore)}</Col>\n          </Row>\n        </Container>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={name}>\n        <Card.Body>\n          <Form onSubmit={(event) => event.preventDefault()}>\n            <Form.Group as={Row}>\n              <Col>\n                <Form.Label htmlFor={name} column>New Score</Form.Label>\n              </Col>\n              <Col>\n                <Form.Control\n                  id={name}\n                  value={newScore}\n                  onChange={(event) => handleNewPlayerScore(event, index)}\n                  type=\"text\"\n                  pattern=\"[0-9]*\"\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n}\n\nexport default Player;","/**\n * Sorting players in score order descending.\n * \n * @param {player} a \n * @param {player} b \n */\nexport default function sortPlayers(a, b) {\n  if (a.score > b.score) {\n    return 1\n  }\n\n  if (a.score < b.score) {\n    return -1\n  }\n\n  return 0\n}","import React from 'react'\nimport { Accordion, Button, Col, Container, Row } from 'react-bootstrap'\nimport Player from './Player'\n\nimport '../css/Game.css'\nimport sortPlayers from '../helpers/sortPlayers'\nimport { Line } from 'react-chartjs-2'\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let players = props.players.slice().map((playerName) => {\n      return {\n        name: playerName,\n        color: `rgba(${Math.floor(255 * Math.random())}, ${Math.floor(255 * Math.random())}, ${Math.floor(255 * Math.random())}, 1)`,\n        score: 0,\n        newScore: 0,\n      }\n    })\n\n    this.state = {\n      round: 1,\n      players: players,\n      history: players.map((player) => {\n        let value = {}\n        Object.assign(value, player)\n        value.score = []\n        delete value.newScore\n        return value\n      }),\n      chartData: { data: { labels: [], datasets: [] } }\n    }\n\n    this.handleNewPlayerScore = this.handleNewPlayerScore.bind(this)\n    this.handleNextRound = this.handleNextRound.bind(this)\n    this.renderPlayer = this.renderPlayer.bind(this)\n    this.updateHistory = this.updateHistory.bind(this)\n    this.updateChartData = this.updateChartData.bind(this)\n  }\n\n  handleNewPlayerScore(event, index) {\n    event.preventDefault()\n\n    let players = this.state.players.slice()\n    players[index].newScore = parseInt(event.target.value === \"\" ? 0 : event.target.value)\n\n    this.setState({ players: players })\n  }\n\n  handleNextRound(event) {\n    event.preventDefault()\n\n    let players = this.state.players.map((player) => {\n      return {\n        name: player.name,\n        score: player.score + player.newScore,\n        newScore: 0,\n      }\n    }).sort(sortPlayers)\n    let history = this.updateHistory(players)\n\n    this.setState({\n      round: this.state.round + 1,\n      players: players,\n      history: history,\n      chartData: this.updateChartData(this.state.round + 1, history)\n    })\n  }\n\n  /**\n   * Updates this.state.history\n   */\n  updateHistory(players) {\n    let history = this.state.history\n\n    history.forEach((player) => {\n      player.score.push(players.find(x => x.name === player.name).score)\n    })\n\n    return history\n  }\n\n  /**\n   * Updates the datasets and label of the chart\n   */\n  updateChartData(round, history) {\n    let chartData = {\n      labels: Array(round).fill().map((x, i) => i + 1),\n      datasets: history.map(player => {\n        return {\n          label: player.name,\n          fill: false,\n          backgroundColor: player.color,\n          borderColor: player.color,\n          borderWidth: 2,\n          data: player.score\n        }\n      }),\n    }\n\n    return chartData\n  }\n\n  renderPlayer(player, index) {\n    return (\n      <Player\n        key={player.score + player.name}\n        index={index}\n        name={player.name}\n        score={player.score}\n        newScore={player.newScore}\n        handleNewPlayerScore={this.handleNewPlayerScore}\n      />\n    )\n  }\n\n  render() {\n    let players = this.state.players.map(this.renderPlayer)\n\n    return (\n      <Container>\n        <Row className=\"game-header mt-3\">\n          <Col>\n            <h2>Round {this.state.round}</h2>\n          </Col>\n          <Col>\n            <Button\n              as=\"input\"\n              type=\"button\"\n              className=\"next-round-button\"\n              value=\"Next round\"\n              onClick={this.handleNextRound}\n            />\n          </Col>\n        </Row>\n        <Row noGutters className=\"mt-4\">\n          <Col>\n            <Row className=\"m-auto\">\n              <Col className=\"m-auto\"><h3>Name</h3></Col>\n              <Col className=\"m-auto\"><h3>Score</h3></Col>\n              <Col className=\"m-auto\"><h3>Next score</h3></Col>\n            </Row>\n            <Row>\n              <Col>\n                <Accordion>\n                  {players}\n                </Accordion>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-5\">\n          <Col>\n            <Line\n              data={this.state.chartData}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Evolution of the score',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Game","import React from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <LinkContainer exact to=\"/hundred-points-react/\">\n        <Navbar.Brand>100 points</Navbar.Brand>\n      </LinkContainer>\n    </Navbar>\n  )\n}\n\nexport default Header","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport AddingPlayers from './AddingPlayers'\nimport Game from './Game'\nimport Header from './Header'\n\n// Importing style\nimport '../css/App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: []\n    }\n\n    this.addPlayer = this.addPlayer.bind(this)\n    this.handleDeletePlayer = this.handleDeletePlayer.bind(this)\n  }\n\n  addPlayer(playerName) {\n    let newPlayersList = this.state.players.slice()\n\n    newPlayersList.push(playerName)\n\n    this.setState({\n      players: newPlayersList\n    })\n  }\n\n\n  handleDeletePlayer(event, player, callback) {\n    event.preventDefault()\n    let players = this.state.players.filter((value) => value !== player)\n    this.setState({ players: players }, callback)\n    console.log(players)\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/hundred-points-react\"></Redirect>\n            </Route>\n            <Route exact path=\"/hundred-points-react\">\n              <AddingPlayers players={this.state.players} parentHandleAddPlayer={this.addPlayer} handleDeletePlayer={this.handleDeletePlayer} />\n            </Route>\n            <Route path=\"/hundred-points-react/game\">\n              <Game players={this.state.players.slice()} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n// Adding bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}